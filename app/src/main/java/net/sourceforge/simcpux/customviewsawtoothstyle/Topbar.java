package net.sourceforge.simcpux.customviewsawtoothstyle;import android.content.Context;import android.content.res.TypedArray;import android.graphics.drawable.Drawable;import android.os.Build;import android.support.annotation.RequiresApi;import android.util.AttributeSet;import android.view.Gravity;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.RelativeLayout;import android.widget.TextView;/** * Created by shaomiao on 2016-11-8. */public class Topbar extends RelativeLayout {    private Button leftButton,rightButton;    private TextView tvTitile;    private int leftTextColor;    private Drawable leftBackground;    private String leftText;    private int rightTextColor;    private Drawable rightBackground;    private String rightText;    private float titleTextSize;    private int titleTextColor;    private String title;    private LayoutParams leftParams,rightParams,titleParams;    private topbarClickListenter listenter;    public interface topbarClickListenter{        public void leftClick();        public void rightClick();    }    public void setOnTopbarClickListener(topbarClickListenter listener){        this.listenter=listener;    }    public void setLeftButtonIsVisable(boolean flag){        if (flag){            leftButton.setVisibility(View.VISIBLE);        }else{            leftButton.setVisibility(View.GONE);        }    }    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)    public Topbar(Context context, AttributeSet attrs) {        super(context, attrs);        //通过TypeArray返回一组自定义属性        TypedArray ta=context.obtainStyledAttributes(attrs,R.styleable.Topbar);        //第一个参数是属性  第二个是默认值        leftTextColor=ta.getColor(R.styleable.Topbar_leftTextColor,0);        leftBackground=ta.getDrawable(R.styleable.Topbar_leftBackground);        leftText=ta.getString(R.styleable.Topbar_leftText);        rightTextColor=ta.getColor(R.styleable.Topbar_rightTextColor,0);        rightBackground=ta.getDrawable(R.styleable.Topbar_rightBackground);        rightText=ta.getString(R.styleable.Topbar_rightText);        titleTextSize=ta.getDimension(R.styleable.Topbar_titleTextSize,0);        titleTextColor=ta.getColor(R.styleable.Topbar_titleTextColor,0);        title=ta.getString(R.styleable.Topbar_title);        //回收        ta.recycle();        leftButton=new Button(context);        rightButton=new Button(context);        tvTitile=new TextView(context);        leftButton.setTextColor(leftTextColor);        leftButton.setBackground(leftBackground);        leftButton.setText(leftText);        rightButton.setTextColor(rightTextColor);        rightButton.setBackground(rightBackground);        rightButton.setText(rightText);        tvTitile.setTextColor(titleTextColor);        tvTitile.setTextSize(titleTextSize);        tvTitile.setText(title);        tvTitile.setGravity(Gravity.CENTER);        setBackgroundColor(0xFFF59563);        leftParams=new LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);        //居左对齐        leftParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT,TRUE);                addView(leftButton,leftParams);        rightParams=new LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);        //居左对齐        rightParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT,TRUE);        addView(rightButton,rightParams);        titleParams=new LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT);        //居左对齐        titleParams.addRule(RelativeLayout.CENTER_IN_PARENT,TRUE);        addView(tvTitile,titleParams);        leftButton.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                listenter.leftClick();            }        });        rightButton.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                listenter.rightClick();            }        });    }}